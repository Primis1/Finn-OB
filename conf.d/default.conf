server {
    listen 80;
    server_name example.com [www.example.com](https://www.example.com);
    return 301 https://$host$request_uri;
}

# The main server block for handling HTTPS traffic.
server {
    listen 443 ssl http2;
    server_name example.com [www.example.com](https://www.example.com);

    # --- TLS Configuration ---
    # These paths correspond to the locations where the
    # certificates are mounted inside the container via Docker volumes.
    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    # Recommended SSL settings for security.
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    # --- Reverse Proxy Configuration ---
    # This block proxies requests to the 'web_app' service.
    location / {
        # The service name 'web_app' is used for DNS resolution within the Docker network.
        proxy_pass http://web_app:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # You can add other locations for serving static files, etc.
    # For example:
    # location /static/ {
    #     root /usr/share/nginx/html;
    # }
}
